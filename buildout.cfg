[buildout]
parts =
    gae_sdk
    gae_tools
    omlette
    postomlette
    scripts
    managepy

versions = versions
unzip = true

script_extra_paths =
    ${buildout:directory}/appengine
    ${buildout:directory}/parts/google_appengine

script_initialization =
    from dev_appserver import fix_sys_path
    fix_sys_path()

    # Our paths (order is important, must use our Django)
    import fix_paths

# List dependencies here
eggs =
    djappengine==0.1

# List links to archives here for dependencies which are not on PyPi
find_links =
    https://github.com/potatolondon/djappengine/archive/TODO.zip#egg=djappengine-0.1

show-picked-versions = true

[versions]
zc.buildout = 2.1.1
appfy.recipe.gae = 0.9.3



# Dowloads and extracts the App Engine SDK.

[gae_sdk]
recipe = appfy.recipe.gae:sdk
url = https://commondatastorage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.1.zip
destination = ${buildout:parts-directory}
hash-name = false
clear-destination = true


# Installs appcfg, dev_appserver and python executables in the bin directory.

[gae_tools]
recipe = appfy.recipe.gae:tools
sdk-directory = ${gae_sdk:destination}/google_appengine
eggs =
extra-paths = ${buildout:script_extra_paths}
initialization = ${buildout:script_initialization}


# Flatten and copy dependencies into the lib directory.

[omlette]
recipe = collective.recipe.omelette
eggs =
    ${buildout:eggs}
location = ${buildout:directory}/appengine/lib
ignores =
    easy_install
    site
    pkg_resources
    docutils
    glue
    PIL
    Pillow


# HACK: Remove Django from the libs directory if it was pulled in as a transitive
# dependency by one of our libraries. The 'ignores' setting in collective.recipe.omlette
# won't work for these.

[postomlette]
recipe = collective.recipe.cmd
on_install = True
on_update = True
cmds =
    rm -f ${buildout:directory}/appengine/lib/django


# Make scripts available under ./bin

[scripts]
recipe = zc.recipe.egg:script
dependent-scripts = true
eggs = ${buildout:eggs}
extra-paths = ${buildout:script_extra_paths}
initialization = ${buildout:script_initialization}
entry-points =
    django-admin.py=django.core.management:execute_from_command_line


# Generate a mange.py script for the project
[managepy]
recipe = zc.recipe.egg:script
eggs =
extra-paths = ${buildout:script_extra_paths}
initialization =
    ${buildout:script_initialization}
    import os
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', '{{ project_name }}.settings.dev')
entry-points =
    manage.py=django.core.management:execute_from_command_line
